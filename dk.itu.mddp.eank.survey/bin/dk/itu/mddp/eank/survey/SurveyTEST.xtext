// automatically generated by Xtext
grammar dk.itu.mddp.eank.survey.Survey with org.eclipse.xtext.common.Terminals

import "platform:/resource/dk.itu.mddp.eank.project/model/SurveyModel.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Model returns Model:
	{Model}
		(surveys+=Survey)?;


Question returns Question:
	MultipleChoice | Open | Rating_Impl | Ranking | Dichotomous | SumConstant | Staple;
Survey returns Survey:
	{Survey}
	name = ID ':'
		(questions+=Question (';' questions+=Question)*)?
	'END SURVEY';

		

EString returns ecore::EString:
	STRING | ID;

EBoolean returns ecore::EBoolean:
	'true' | 'false';


MultipleChoice returns MultipleChoice:
	{MultipleChoice}
	'MultipleChoice' ':' 
		('is required')? 
		('enquire'? question=EString)? 
		('you'? 'can'? 'choose'? 'from'? 'these'? 'options' choice+=Choice ( "," choice+=Choice)* )?
		('or' 'free'?'form'?'choice'? other=EString)?
		('conditionals'? ':' MultipleChoiceForks+=MultipleChoiceFork ( "," MultipleChoiceForks+=MultipleChoiceFork)*)?;

Open returns Open:
	{Open}
	'Open' ':'
		('is required')? 
		('enquire'? question=EString)? 
		
	;

Rating_Impl returns Rating:
	{Rating}
	'Rating' ':'
		('is required')? 
		('enquire'? question=EString)?
		('from'? Min=EInt)?
		('to'? Max=EInt)?
		('first' first=EString)?
		('last' last=EString)?
		('conditionals'? '(' RatingForks+=RatingFork ( "," RatingForks+=RatingFork)* ')' )?;

Ranking returns Ranking:
	
	'Ranking' ':'
		('is required')? 
		('enquire'? question=EString)? 
		('you'? 'can'? 'choose' 'from'? 'these'? choices+=Choice ( "," choices+=Choice)* )?
		('conditionals'? '(' forks+=RankingFork ( "," forks+=RankingFork)* ')' )?;

Dichotomous returns Dichotomous:
	{Dichotomous}
	'Dichotomous' ':'
		('is required')? 
		('enquire'? question=EString)? 
		('if yes' '(' yes+=Question ( "," yes+=Question)* ')')?
		('if no' '(' no+=Question ( "," no+=Question)* ')')?;

SumConstant returns SumConstant:
	{SumConstant}
	'SumConstant' ':'
		('is required')? 
		('enquire'? question=EString)? ;

Staple returns Staple:
	{Staple}
	'Staple' ':'
		('is required')? 
		('enquire'? question=EString)? 
		('from'? Min=EInt)?
		('to'? Max=EInt)?
		('first' first=EString)?
		('mid' mid=EString)?
		('last' last=EString)?
		('conditionals' RatingForks+=RatingFork ( "," RatingForks+=RatingFork)* )?;

Choice returns Choice:
	name = ID ':'
	Description=EString;

MultipleChoiceFork returns MultipleChoiceFork:
		'match' matcher=[Choice|EString]
		('questions' '('forkedquestions+=Question ( "," forkedquestions+=Question)* ')')?;

EInt returns ecore::EInt:
	'-'? INT;

RatingFork returns RatingFork:
	{RatingFork}
	'RatingFork' ':'
		('from' min=EInt)?
		('to' max=EInt)?
		('questions' '(' forkedquestion+=Question ( "," forkedquestion+=Question)* ')' )?;

RankingFork returns RankingFork:
	'RankingFork' ':'
		('from' min=EInt)?
		('to' max=EInt)?
		'match'? 'with'? matcher=[Choice|EString]
		('questions' '(' forkedquestions+=Question ( "," forkedquestions+=Question)* ')')?;